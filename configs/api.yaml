openapi: 3.0.0
info:
  title: BBBlog API
  description: 个人博客后端`API`文档
  version: 0.0.1

# servers:
#   - url: http://api.example.com/v1
#     description: Optional server description, e.g. Main (production) server
#   - url: http://staging-api.example.com
#     description: Optional server description, e.g. Internal staging server for testing

paths:
  /note:
    get:
      summary: 返回所有的笔记信息
      tags:
        - notes
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: 指定返回的笔记信息数量
      responses:
        "200": # status code
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"
                  data:
                    type: object
                    properties:
                      orderedByVisit:
                        type: array
                        items:
                          $ref: "#/components/NoteData"
                      orderedByTime:
                        type: array
                        items:
                          $ref: "#/components/NoteData"
    post:
      summary: 添加或更新笔记
      description: 以`title`为条件，如果笔记不存在则添加该笔记，否则更新该笔记
      tags:
        - notes
      security:
        - BearerAuth: [add]
      requestBody:
        description: 提供笔记的信息
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/NoteInfo"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"
                  data:
                    type: object
        "400":
          description: "数据校验未通过"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 数据格式有误
                  data:
                    type: object
          "401":
            description: "操作未授权"
            content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 无效或过期的token
                  data:
                    type: object
    patch:
      summary: 更新笔记
      tags:
        - notes
      security:
        - BearerAuth: [update]
      requestBody:
        description: 提供笔记的信息
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/NoteInfo"
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"
                  data:
                    type: object
        "400":
          description: "数据校验未通过"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 数据格式有误
                  data:
                    type: object
        "401":
          description: "操作不正确"
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 不存在的笔记
                  data:
                    type: object

  /note/{noteId}:
    get:
      summary: 通过笔记ID返回特定的笔记
      tags:
        - notes
      parameters:
        - name: noteId
          in: path
          required: true
          description: 笔记的的`ID`
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"
                  data:
                    $ref: "#/components/NoteDataWithContent"

  /categories:
    get:
      summary: 返回所有笔记的种类信息
      tags:
        - categories
      responses:
        "200":
          description: 返回所有笔记的种类以及对应种类的`icon_url`
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"

                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          type: string

                      iconUrls:
                        type: object
                        example:
                          Python: https://cdn.iconscout.com/icon/free/png-128/python-2-226051.png
                        properties:
                          categoryName:
                            type: string
                            format: url

  /auth:
    post:
      summary: 登录授权
      tags:
        - authentication
      requestBody:
        description: 登录获取`token`
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: "string"
                  example: "BBBlog@username"
                password:
                  type: "string"
                  example: "BBBlog@secret"
              required:
                - username
                - password

      responses:
        "200":
          description: 返回有效的`token`
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      token:
                        type: string
                        example: "dfjghjk34h5kjhdfkjdfgklj76l8k"

        "400":
          description: 用户名或密码错误
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 用户名或密码错误
                  data:
                    type: object
    get:
      summary: 验证token
      tags:
        - authentication
      security:
        - BearerAuth: [add]
      responses:
        "200":
          description: 验证`token`是否过期
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    $ref: "#/components/MSGData"

                  data:
                    type: object
        "401":
          description: 检测的`token`已过期
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: 无效或过期的token

                  data:
                    type: object

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  MSGData:
    type: string
    description: Response status
    example: ok

  NoteData:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      is_show:
        type: integer
        minimum: 0
        maximum: 1
      icon_url:
        type: string
        format: url
        description: icon url
        example: https://cdn.iconscout.com/icon/free/png-128/python-2-226051.png
      category:
        type: string
      visits:
        type: integer
      create_at:
        type: string
        format: date-time
      update_at:
        type: string
        format: date-time

  NoteDataWithContent:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      content:
      type: string
      description: HTML 化 之后的 markdown 内容然后再进行 BASE64 编码的结果
      is_show:
        type: integer
        minimum: 0
        maximum: 1
      icon_url:
        type: string
        format: url
        description: icon url
        example: https://cdn.iconscout.com/icon/free/png-128/python-2-226051.png
      category:
        type: string
      visits:
        type: integer
      create_at:
        type: string
        format: date-time
      update_at:
        type: string
        format: date-time

  NoteInfo:
    type: object
    properties:
      title:
        type: "string"
        example: "learning how to learning how to learn"
      content:
        type: "string"
        example: "some character encoded by BASE64"
      isShow:
        type: integer
        minimum: 0
        maximum: 1
        example: 1
      iconUrl:
        type: string
        format: url
        example: https://cdn.iconscout.com/icon/free/png-128/python-2-226051.png
      category:
        type: string
        example: Python
    required:
      - title
      - content
      - category
